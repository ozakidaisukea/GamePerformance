//=============================================================================
// 
// タイトルの処理 [title.cpp]
// Author : Mikiya Meguro
//
//=============================================================================
#include "title.h"
#include "input.h"
#include "fade.h"
#include "sound.h"
#include "pressenter.h"
#include "titlelogo.h"
#include "meshField.h"
#include "meshWall.h"
#include "camera.h"
#include "light.h"
#include "obstacle.h"
#include "passage.h"
#include "car.h"
#include "shadow.h"
#include "inputx.h"
#include "time.h"
//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define TITLE_TEXTURENAME		"data\\TEXTURE\\ActionTitle.jpg"	//テクスチャのファイル名
#define POS_X				(0)							//左上座標X
#define POS_Y				(0)							//左上座標Y	
#define BG_WIDTH			(500)						//正方形の横幅座標
#define BG_HEIGHT			(500)						//正方形の縦幅座標

//*****************************************************************************
// グローバル変数
//*****************************************************************************
LPDIRECT3DTEXTURE9 g_pTextureTitle = NULL;		//テクスチャへのポインタ
LPDIRECT3DVERTEXBUFFER9 g_pVtxBuffTitle = NULL;	//頂点バッファへのポインタ
int g_nCntRankingTimer;
JoyState g_JoyStateTitle;
//*****************************************************************************
// タイトル
//*****************************************************************************
void InitTitle(void)
{	
	g_nCntRankingTimer = 0;
	//ローカル変数
	VERTEX_2D *pVtx;//頂点情報へのポインタ
	LPDIRECT3DDEVICE9 pDevice;
	pDevice = GetDevice();
	//テクスチャの読み込み
	D3DXCreateTextureFromFile(pDevice,
		TITLE_TEXTURENAME,
		&g_pTextureTitle);

	//頂点バッファの生成
	pDevice->CreateVertexBuffer(sizeof(VERTEX_2D) * 4,
		D3DUSAGE_WRITEONLY,
		FVF_VERTEX_2D,
		D3DPOOL_MANAGED,
		&g_pVtxBuffTitle,
		NULL);

	//頂点バッファをロックし頂点データのポインタを取得
	g_pVtxBuffTitle->Lock(0, 0, (void**)&pVtx, 0);
	//頂点座標
	pVtx[0].pos = D3DXVECTOR3(POS_X, POS_Y, 0.0f);
	pVtx[1].pos = D3DXVECTOR3(BG_WIDTH, POS_Y, 0.0f);
	pVtx[2].pos = D3DXVECTOR3(POS_X, BG_HEIGHT, 0.0f);
	pVtx[3].pos = D3DXVECTOR3(BG_WIDTH, BG_HEIGHT, 0.0f);
	//テクスチャ座標
	pVtx[0].tex = D3DXVECTOR2(0.0f, 0.0f);
	pVtx[1].tex = D3DXVECTOR2(1.0f, 0.0f);
	pVtx[2].tex = D3DXVECTOR2(0.0f, 1.0f);
	pVtx[3].tex = D3DXVECTOR2(1.0f, 1.0f);
	//頂点
	pVtx[0].rhw = 1.0f;
	pVtx[1].rhw = 1.0f;
	pVtx[2].rhw = 1.0f;
	pVtx[3].rhw = 1.0f;
	//頂点カラー
	pVtx[0].col = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	pVtx[1].col = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	pVtx[2].col = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	pVtx[3].col = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

	//頂点バッファをアンロックする
	g_pVtxBuffTitle->Unlock();	

	InitPressEnter();
	SetPressEnter(D3DXVECTOR3(SCREEN_WIDTH / 2,570.0f,0.0f), D3DXCOLOR(1.0f, 0.0f,0.0f,1.0f), 200.0f, 50.0f);

	// カメラの初期化処理
	InitCamera();
	// ライトの初期化処理
	InitLight();
	// タイトルロゴ
	InitTitleLogo();
	// ポリゴンの初期化処理
	InitPolygon();
	// 影の初期化
	InitShadow();
	// 通行人の初期化
	InitPassage();
	// 車
	InitCar();
	//　テクスチャモデル
	InitObstacle();

	//地面
	SetPolygon(D3DXVECTOR3(0, 0, 0));		//左下エリア
	SetPolygon(D3DXVECTOR3(6000, 0, 0));	//右下エリア
	SetPolygon(D3DXVECTOR3(0, 0, 6000));	//左上エリア
	SetPolygon(D3DXVECTOR3(6000, 0, 6000));	//右上エリア

	//目黒担当エリア	（混合エリア左上）
#if 1
											//横2マスエリア
	SetObstacle(D3DXVECTOR3(-580, 0, 6500), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004);
	SetObstacle(D3DXVECTOR3(-580, 0, 6730), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE000);
	SetObstacle(D3DXVECTOR3(-850, 0, 6530), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(-880, 0, 6730), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-1230, 0, 6530), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-1230, 0, 6730), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(-1500, 0, 6650), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_HOUSE008_YOKO);

	SetObstacle(D3DXVECTOR3(1030, 0, 4800), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004);
	SetObstacle(D3DXVECTOR3(1030, 0, 5030), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE000);
	SetObstacle(D3DXVECTOR3(1300, 0, 4830), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(1310, 0, 5030), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(1680, 0, 4830), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(1680, 0, 5030), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(1950, 0, 4930), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE008_YOKO);

	SetObstacle(D3DXVECTOR3(-1580, 0, 5780), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE009);
	SetObstacle(D3DXVECTOR3(-1970, 0, 5650), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006);
	SetObstacle(D3DXVECTOR3(-1970, 0, 5879), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(-2330, 0, 5670), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(-2300, 0, 5899), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006);
	SetObstacle(D3DXVECTOR3(-2500, 0, 5799), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);

	SetObstacle(D3DXVECTOR3(1980, 0, 7500), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE009);
	SetObstacle(D3DXVECTOR3(2390, 0, 7370), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006);
	SetObstacle(D3DXVECTOR3(2360, 0, 7599), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(2750, 0, 7390), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(2720, 0, 7589), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006);
	SetObstacle(D3DXVECTOR3(2930, 0, 7519), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);

	SetObstacle(D3DXVECTOR3(180, 0, 7390), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004);
	SetObstacle(D3DXVECTOR3(160, 0, 7590), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE000);
	SetObstacle(D3DXVECTOR3(470, 0, 7390), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(480, 0, 7610), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(800, 0, 7390), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(800, 0, 7610), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(1100, 0, 7500), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE008_YOKO);

	SetObstacle(D3DXVECTOR3(-1480, 0, 3090), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004);
	SetObstacle(D3DXVECTOR3(-1460, 0, 3290), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE000);
	SetObstacle(D3DXVECTOR3(-1780, 0, 3090), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(-1780, 0, 3310), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-2140, 0, 3090), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-2100, 0, 3310), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(-2400, 0, 3200), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE008_YOKO);

	SetObstacle(D3DXVECTOR3(930, 0, 8360), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);
	SetObstacle(D3DXVECTOR3(1150, 0, 8460), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(1150, 0, 8260), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006);
	SetObstacle(D3DXVECTOR3(1440, 0, 8460), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE000);
	SetObstacle(D3DXVECTOR3(1440, 0, 8260), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(1750, 0, 8460), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(1740, 0, 8260), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004);
	SetObstacle(D3DXVECTOR3(1990, 0, 8350), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_OFFICE001);

	//ビルセット
	SetObstacle(D3DXVECTOR3(1930, 0, 5780), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE000);
	SetObstacle(D3DXVECTOR3(2285, 0, 5780), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE000);
	SetObstacle(D3DXVECTOR3(2610, 0, 5780), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_OFFICE001);
	SetObstacle(D3DXVECTOR3(2850, 0, 5780), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_OFFICE001);

	SetObstacle(D3DXVECTOR3(1930, 0, 3230), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE000);
	SetObstacle(D3DXVECTOR3(2285, 0, 3230), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE000);
	SetObstacle(D3DXVECTOR3(2610, 0, 3230), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_OFFICE001);
	SetObstacle(D3DXVECTOR3(2850, 0, 3230), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_OFFICE001);

	//縦2マス
	SetObstacle(D3DXVECTOR3(200, 0, 4050), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE008);
	SetObstacle(D3DXVECTOR3(120, 0, 4710), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(280, 0, 4730), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(190, 0, 4400), D3DXVECTOR3(0, D3DX_PI*0.5f, 0), OBSTACLE_TYPE_HOUSE002);
	SetObstacle(D3DXVECTOR3(200, 0, 5000), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE008);

	SetObstacle(D3DXVECTOR3(1060, 0, 3180), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE008);
	SetObstacle(D3DXVECTOR3(980, 0, 3840), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(1130, 0, 3860), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(1050, 0, 3530), D3DXVECTOR3(0, D3DX_PI*0.5f, 0), OBSTACLE_TYPE_HOUSE002);
	SetObstacle(D3DXVECTOR3(1060, 0, 4130), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE008);

	SetObstacle(D3DXVECTOR3(-2360, 0, 8430), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-2450, 0, 8180), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE003_YOKO);
	SetObstacle(D3DXVECTOR3(-2270, 0, 8180), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE007_YOKO);
	SetObstacle(D3DXVECTOR3(-2450, 0, 7900), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);
	SetObstacle(D3DXVECTOR3(-2270, 0, 7920), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(-2450, 0, 7620), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(-2270, 0, 7670), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);
	SetObstacle(D3DXVECTOR3(-2360, 0, 7430), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE000);

	SetObstacle(D3DXVECTOR3(-1510, 0, 8300), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE008);
	//SetObstacle(D3DXVECTOR3(-1590, 0, 8600), D3DXVECTOR3(0, D3DX_PI*0.5f, 0), OBSTACLE_TYPE_HOUSE002);
	SetObstacle(D3DXVECTOR3(-1430, 0, 8560), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(-1590, 0, 8580), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(-1440, 0, 8860), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE007_YOKO);
	SetObstacle(D3DXVECTOR3(-1590, 0, 8860), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE007_YOKO);

	SetObstacle(D3DXVECTOR3(-640, 0, 8430), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-570, 0, 8180), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003_YOKO);
	SetObstacle(D3DXVECTOR3(-720, 0, 8180), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE007_YOKO);
	SetObstacle(D3DXVECTOR3(-570, 0, 7900), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);
	SetObstacle(D3DXVECTOR3(-750, 0, 7920), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(-570, 0, 7620), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(-750, 0, 7670), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);
	SetObstacle(D3DXVECTOR3(-640, 0, 7430), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE000);

	//ビル
	SetObstacle(D3DXVECTOR3(-670, 0, 3880), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_OFFICE002_YOKO);
	SetObstacle(D3DXVECTOR3(-670, 0, 3280), D3DXVECTOR3(0, D3DX_PI*0.5f, 0), OBSTACLE_TYPE_OFFICE000);

	SetObstacle(D3DXVECTOR3(-670, 0, 5550), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_OFFICE002_YOKO);
	SetObstacle(D3DXVECTOR3(-670, 0, 4950), D3DXVECTOR3(0, D3DX_PI*0.5f, 0), OBSTACLE_TYPE_OFFICE000);

	SetObstacle(D3DXVECTOR3(2780, 0, 5000), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE001_YOKO);
	SetObstacle(D3DXVECTOR3(2780, 0, 4750), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE001_YOKO);
	SetObstacle(D3DXVECTOR3(2780, 0, 4410), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE001_YOKO);
	SetObstacle(D3DXVECTOR3(2780, 0, 4100), D3DXVECTOR3(0, D3DX_PI*-0.5f, 0), OBSTACLE_TYPE_OFFICE000);

	//１マス
	SetObstacle(D3DXVECTOR3(2780, 0, 6650), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_PIZZASYATOU);

	SetObstacle(D3DXVECTOR3(1910, 0, 6650), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_POKKURUZOU);

	SetObstacle(D3DXVECTOR3(200, 0, 3200), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_PIZZASYATOU);

	SetObstacle(D3DXVECTOR3(1920, 0, 4050), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HAIKYO);

	SetObstacle(D3DXVECTOR3(-2360, 0, 6550), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(-2360, 0, 6750), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);

	SetObstacle(D3DXVECTOR3(-1500, 0, 7400), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(-1500, 0, 7600), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006);

	SetObstacle(D3DXVECTOR3(220, 0, 8460), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(220, 0, 8260), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006);

	SetObstacle(D3DXVECTOR3(2780, 0, 8450), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(2780, 0, 8250), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001);
	//大マス
	SetObstacle(D3DXVECTOR3(750, 0, 6660), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOSPITAL);
	SetObstacle(D3DXVECTOR3(210, 0, 6382.5f), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOSPITAL_YOKO);
	SetObstacle(D3DXVECTOR3(503, 0, 5760), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOSPITAL);
	SetObstacle(D3DXVECTOR3(1040, 0, 6040), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOSPITAL_YOKO);
	SetObstacle(D3DXVECTOR3(640, 0, 6250), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_POKKURUZOU);


	SetObstacle(D3DXVECTOR3(-1460, 0, 4990), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE000);
	SetObstacle(D3DXVECTOR3(-1780, 0, 5010), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-2100, 0, 5010), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003);

	SetObstacle(D3DXVECTOR3(-2400, 0, 4900), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE008_YOKO);
	SetObstacle(D3DXVECTOR3(-2410, 0, 4250), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE007_YOKO);

	SetObstacle(D3DXVECTOR3(-2410, 0, 4540), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE000_YOKO);
	SetObstacle(D3DXVECTOR3(-1450, 0, 4240), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(-1450, 0, 4490), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003_YOKO);
	SetObstacle(D3DXVECTOR3(-1420, 0, 4750), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);

	SetObstacle(D3DXVECTOR3(-1510, 0, 3990), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(-1790, 0, 3990), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006);
	SetObstacle(D3DXVECTOR3(-2090, 0, 3990), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-2380, 0, 3990), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004);

	SetObstacle(D3DXVECTOR3(-1790, 0, 4350), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE002);
	SetObstacle(D3DXVECTOR3(-2100, 0, 4350), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE002);
	SetObstacle(D3DXVECTOR3(-1790, 0, 4660), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE002);
	SetObstacle(D3DXVECTOR3(-2100, 0, 4660), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE002);

#endif
	//稲井担当エリア	（ビルエリア右上）
#if 1
	SetObstacle(D3DXVECTOR3(8820, 0, 8360), D3DXVECTOR3(0, D3DX_PI * 0.5f, 0), OBSTACLE_TYPE_OFFICE000);//29　中
	SetObstacle(D3DXVECTOR3(8830, 0, 7500), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE001);//30　小
	SetObstacle(D3DXVECTOR3(8330, 0, 7500), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE002);//31　大

	SetObstacle(D3DXVECTOR3(5350, 0, 8360), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE000);//29 2
	SetObstacle(D3DXVECTOR3(5350, 0, 7500), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE000);//29 3
	SetObstacle(D3DXVECTOR3(5350, 0, 7930), D3DXVECTOR3(0, D3DX_PI* 0.5f, 0), OBSTACLE_TYPE_OFFICE000);//29 4
	SetObstacle(D3DXVECTOR3(4490, 0, 8360), D3DXVECTOR3(0, D3DX_PI* 0.5f, 0), OBSTACLE_TYPE_OFFICE000);//29 5
	SetObstacle(D3DXVECTOR3(4490, 0, 8800), D3DXVECTOR3(0, D3DX_PI* 0.5f, 0), OBSTACLE_TYPE_OFFICE000);//29 6
	SetObstacle(D3DXVECTOR3(4490, 0, 7500), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE000);//29 7
	SetObstacle(D3DXVECTOR3(8820, 0, 6650), D3DXVECTOR3(0, D3DX_PI* 0.5f, 0), OBSTACLE_TYPE_OFFICE000);//29 8
	SetObstacle(D3DXVECTOR3(7930, 0, 6650), D3DXVECTOR3(0, D3DX_PI* 1.0f, 0), OBSTACLE_TYPE_OFFICE000);//29 9
	SetObstacle(D3DXVECTOR3(8810, 0, 5790), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE000);//29 10
	SetObstacle(D3DXVECTOR3(7950, 0, 5790), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE000);//29 11
	SetObstacle(D3DXVECTOR3(8020, 0, 3215), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE000);//29 12
	SetObstacle(D3DXVECTOR3(7930, 0, 4070), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE000);//29 13
	SetObstacle(D3DXVECTOR3(3640, 0, 3215), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE000);//29 14
	SetObstacle(D3DXVECTOR3(3640, 0, 6650), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE000);//29 15
	SetObstacle(D3DXVECTOR3(4490, 0, 5790), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE000);//29 16
	SetObstacle(D3DXVECTOR3(7075, 0, 3215), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE000);//29 17
	SetObstacle(D3DXVECTOR3(6215, 0, 3215), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE000);//29 18
	SetObstacle(D3DXVECTOR3(5350, 0, 3215), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE000);//29 19
	SetObstacle(D3DXVECTOR3(4470, 0, 3215), D3DXVECTOR3(0, D3DX_PI * -0.5f, 0), OBSTACLE_TYPE_OFFICE000);//29 20
	SetObstacle(D3DXVECTOR3(6210, 0, 4500), D3DXVECTOR3(0, D3DX_PI * -0.5f, 0), OBSTACLE_TYPE_OFFICE000);//29 21
	SetObstacle(D3DXVECTOR3(7920, 0, 4920), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE000);//29 11

	SetObstacle(D3DXVECTOR3(6215, 0, 8360), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE001);//30 2
	SetObstacle(D3DXVECTOR3(7120, 0, 7500), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE001);//30 3
	SetObstacle(D3DXVECTOR3(6160, 0, 7500), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE001);//30 4
	SetObstacle(D3DXVECTOR3(8360, 0, 5790), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE001);//30 5
	SetObstacle(D3DXVECTOR3(8820, 0, 4050), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE001_YOKO);//30 6
	SetObstacle(D3DXVECTOR3(3640, 0, 7500), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE001_YOKO);//30 7
	SetObstacle(D3DXVECTOR3(4060, 0, 3215), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE001);//30 8
	SetObstacle(D3DXVECTOR3(6260, 0, 4080), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE001);//30 9
	SetObstacle(D3DXVECTOR3(6160, 0, 4080), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE001);//30 10
	SetObstacle(D3DXVECTOR3(6260, 0, 4920), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE001);//30 11
	SetObstacle(D3DXVECTOR3(6160, 0, 4920), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE001);//30 12
	SetObstacle(D3DXVECTOR3(7075, 0, 3920), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE001_YOKO);//30 13
	SetObstacle(D3DXVECTOR3(7075, 0, 4120), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE001_YOKO);//30 14
	SetObstacle(D3DXVECTOR3(7075, 0, 3595), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE001_YOKO);//30 15

	SetObstacle(D3DXVECTOR3(8100, 0, 7500), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE002);//31 2
	SetObstacle(D3DXVECTOR3(7800, 0, 8360), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE002);//31 3
	SetObstacle(D3DXVECTOR3(7250, 0, 8360), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE002);//31 4
	SetObstacle(D3DXVECTOR3(6640, 0, 7500), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE002);//31 5
	SetObstacle(D3DXVECTOR3(8820, 0, 4700), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE002_YOKO);//31 6
	SetObstacle(D3DXVECTOR3(3640, 0, 8170), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE002_YOKO);//31 7
	SetObstacle(D3DXVECTOR3(8620, 0, 3215), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE002);//31 8
	SetObstacle(D3DXVECTOR3(3850, 0, 5790), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE002);//31 9
	SetObstacle(D3DXVECTOR3(3640, 0, 8170), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE002_YOKO);//31 10
	SetObstacle(D3DXVECTOR3(3640, 0, 8170), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE002_YOKO);//31 11
	SetObstacle(D3DXVECTOR3(5350, 0, 3855), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE002_YOKO);//31 12
	SetObstacle(D3DXVECTOR3(7270, 0, 4920), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE002);//31 13
	SetObstacle(D3DXVECTOR3(7040, 0, 6020), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE002_YOKO);//31 14 
	SetObstacle(D3DXVECTOR3(6850, 0, 6630), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE002);//31 15
	SetObstacle(D3DXVECTOR3(6240, 0, 6430), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE002_YOKO);//31 16
	SetObstacle(D3DXVECTOR3(6450, 0, 5830), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE002);//31 17
	SetObstacle(D3DXVECTOR3(5350, 0, 5360), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE002_YOKO);//31 18
	SetObstacle(D3DXVECTOR3(4900, 0, 6650), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE002);//31 19
	SetObstacle(D3DXVECTOR3(4470, 0, 4750), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE002_YOKO);//31 20
	SetObstacle(D3DXVECTOR3(3850, 0, 4940), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_OFFICE002);//31 21
	SetObstacle(D3DXVECTOR3(3650, 0, 4260), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE002_YOKO);//31 22
	SetObstacle(D3DXVECTOR3(4250, 0, 4070), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_OFFICE002);//31 23

#endif
	 //荘司担当エリア	（住宅エリア左下）
#if 1
																						   //横2マスエリア
	SetObstacle(D3DXVECTOR3(-580, 0, 500), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004);
	SetObstacle(D3DXVECTOR3(-580, 0, 730), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE000);
	SetObstacle(D3DXVECTOR3(-850, 0, 530), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(-880, 0, 730), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-1230, 0, 530), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-1230, 0, 730), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(-1500, 0, 650), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_HOUSE008_YOKO);

	SetObstacle(D3DXVECTOR3(1030, 0, -1200), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004);
	SetObstacle(D3DXVECTOR3(1030, 0, -970), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE000);
	SetObstacle(D3DXVECTOR3(1300, 0, -1170), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(1310, 0, -970), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(1680, 0, -1170), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(1680, 0, -970), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(1950, 0, -1070), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE008_YOKO);

	SetObstacle(D3DXVECTOR3(-1580, 0, -220), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE009);
	SetObstacle(D3DXVECTOR3(-1970, 0, -350), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006);
	SetObstacle(D3DXVECTOR3(-1970, 0, -121), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(-2330, 0, -300), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(-2300, 0, -101), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006);
	SetObstacle(D3DXVECTOR3(-2500, 0, -201), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);

	SetObstacle(D3DXVECTOR3(1980, 0, 1500), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE009);
	SetObstacle(D3DXVECTOR3(2390, 0, 1370), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006);
	SetObstacle(D3DXVECTOR3(2360, 0, 1599), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(2750, 0, 1390), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(2720, 0, 1589), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006);
	SetObstacle(D3DXVECTOR3(2930, 0, 1519), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);

	SetObstacle(D3DXVECTOR3(180, 0, 1390), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004);
	SetObstacle(D3DXVECTOR3(160, 0, 1590), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE000);
	SetObstacle(D3DXVECTOR3(470, 0, 1390), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(480, 0, 1610), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(800, 0, 1390), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(800, 0, 1610), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(1100, 0, 1500), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE008_YOKO);

	SetObstacle(D3DXVECTOR3(-1480, 0, -2910), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004);
	SetObstacle(D3DXVECTOR3(-1460, 0, -2710), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE000);
	SetObstacle(D3DXVECTOR3(-1780, 0, -2910), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(-1780, 0, -2690), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-2140, 0, -2910), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-2100, 0, -2690), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(-2400, 0, -2800), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE008_YOKO);

	SetObstacle(D3DXVECTOR3(930, 0, 2360), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);
	SetObstacle(D3DXVECTOR3(1150, 0, 2460), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(1150, 0, 2260), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006);
	SetObstacle(D3DXVECTOR3(1440, 0, 2460), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE000);
	SetObstacle(D3DXVECTOR3(1440, 0, 2260), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(1750, 0, 2460), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(1740, 0, 2260), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004);
	SetObstacle(D3DXVECTOR3(1990, 0, 2350), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_OFFICE001);

	//ビルセット
	SetObstacle(D3DXVECTOR3(1930, 0, -220), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE000);
	SetObstacle(D3DXVECTOR3(2285, 0, -220), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE000);
	SetObstacle(D3DXVECTOR3(2610, 0, -220), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_OFFICE001);
	SetObstacle(D3DXVECTOR3(2850, 0, -220), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_OFFICE001);

	SetObstacle(D3DXVECTOR3(1930, 0, -2770), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE000);
	SetObstacle(D3DXVECTOR3(2285, 0, -2770), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE000);
	SetObstacle(D3DXVECTOR3(2610, 0, -2770), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE001);
	SetObstacle(D3DXVECTOR3(2850, 0, -2770), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE001);

	//縦2マス
	SetObstacle(D3DXVECTOR3(200, 0, -1950), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE008);
	SetObstacle(D3DXVECTOR3(120, 0, -1290), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(280, 0, -1270), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(190, 0, -1600), D3DXVECTOR3(0, D3DX_PI*0.5f, 0), OBSTACLE_TYPE_HOUSE002);
	SetObstacle(D3DXVECTOR3(200, 0, -1000), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE008);

	SetObstacle(D3DXVECTOR3(1060, 0, -2820), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE008);
	SetObstacle(D3DXVECTOR3(980, 0, -2160), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(1130, 0, -2140), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(1050, 0, -2470), D3DXVECTOR3(0, D3DX_PI*0.5f, 0), OBSTACLE_TYPE_HOUSE002);
	SetObstacle(D3DXVECTOR3(1060, 0, -1870), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE008);

	SetObstacle(D3DXVECTOR3(-2360, 0, 2430), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-2450, 0, 2180), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE003_YOKO);
	SetObstacle(D3DXVECTOR3(-2270, 0, 2180), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE007_YOKO);
	SetObstacle(D3DXVECTOR3(-2450, 0, 1900), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);
	SetObstacle(D3DXVECTOR3(-2270, 0, 1920), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(-2450, 0, 1620), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(-2270, 0, 1670), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);
	SetObstacle(D3DXVECTOR3(-2360, 0, 1430), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE000);

	SetObstacle(D3DXVECTOR3(-1510, 0, 2300), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE008);
	//SetObstacle(D3DXVECTOR3(-1590, 0, 8600), D3DXVECTOR3(0, D3DX_PI*0.5f, 0), OBSTACLE_TYPE_HOUSE002);
	SetObstacle(D3DXVECTOR3(-1430, 0, 2560), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(-1590, 0, 2580), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(-1440, 0, 2860), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE007_YOKO);
	SetObstacle(D3DXVECTOR3(-1590, 0, 2860), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE007_YOKO);

	SetObstacle(D3DXVECTOR3(-640, 0, 2430), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-570, 0, 2180), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003_YOKO);
	SetObstacle(D3DXVECTOR3(-720, 0, 2180), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE007_YOKO);
	SetObstacle(D3DXVECTOR3(-570, 0, 1900), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);
	SetObstacle(D3DXVECTOR3(-750, 0, 1920), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(-570, 0, 1620), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(-750, 0, 1670), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);
	SetObstacle(D3DXVECTOR3(-640, 0, 1430), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE000);

	//ビル
	SetObstacle(D3DXVECTOR3(-670, 0, -2120), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_OFFICE002_YOKO);
	SetObstacle(D3DXVECTOR3(-670, 0, -2680), D3DXVECTOR3(0, D3DX_PI*0.5f, 0), OBSTACLE_TYPE_OFFICE000);

	SetObstacle(D3DXVECTOR3(-670, 0, -450), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_OFFICE002_YOKO);
	SetObstacle(D3DXVECTOR3(-670, 0, -1050), D3DXVECTOR3(0, D3DX_PI*0.5f, 0), OBSTACLE_TYPE_OFFICE000);

	SetObstacle(D3DXVECTOR3(2780, 0, -1000), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE001_YOKO);
	SetObstacle(D3DXVECTOR3(2780, 0, -1250), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE001_YOKO);
	SetObstacle(D3DXVECTOR3(2780, 0, -1590), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_OFFICE001_YOKO);
	SetObstacle(D3DXVECTOR3(2780, 0, -1900), D3DXVECTOR3(0, D3DX_PI*-0.5f, 0), OBSTACLE_TYPE_OFFICE000);

	//１マス
	SetObstacle(D3DXVECTOR3(2780, 0, 650), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_PIZZASYATOU);

	SetObstacle(D3DXVECTOR3(1910, 0, 650), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_POKKURUZOU);

	SetObstacle(D3DXVECTOR3(200, 0, -2800), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_PIZZASYATOU);

	SetObstacle(D3DXVECTOR3(1920, 0, -1950), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HAIKYO);

	SetObstacle(D3DXVECTOR3(-2360, 0, 550), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(-2360, 0, 750), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);

	SetObstacle(D3DXVECTOR3(-1500, 0, 1400), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(-1500, 0, 1600), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006);

	SetObstacle(D3DXVECTOR3(220, 0, 2460), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(220, 0, 2260), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006);

	SetObstacle(D3DXVECTOR3(2780, 0, 2450), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(2780, 0, 2250), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001);
	//大マス
	SetObstacle(D3DXVECTOR3(160, 0, 690), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE000);
	SetObstacle(D3DXVECTOR3(480, 0, 710), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(800, 0, 710), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(1100, 0, 600), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE008_YOKO);
	SetObstacle(D3DXVECTOR3(1110, 0, -50), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE007_YOKO);
	SetObstacle(D3DXVECTOR3(1110, 0, 240), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE000_YOKO);
	SetObstacle(D3DXVECTOR3(150, 0, -100), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001_YOKO);
	SetObstacle(D3DXVECTOR3(150, 0, 190), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE003_YOKO);
	SetObstacle(D3DXVECTOR3(120, 0, 450), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);
	SetObstacle(D3DXVECTOR3(330, 0, -310), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_PIZZA);
	SetObstacle(D3DXVECTOR3(790, 0, -310), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(1080, 0, -310), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004);
	SetObstacle(D3DXVECTOR3(490, 0, 50), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE002);
	SetObstacle(D3DXVECTOR3(800, 0, 50), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE002);
	SetObstacle(D3DXVECTOR3(490, 0, 360), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE002);
	SetObstacle(D3DXVECTOR3(800, 0, 360), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE002);

	SetObstacle(D3DXVECTOR3(-1460, 0, -1010), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE000);
	SetObstacle(D3DXVECTOR3(-1780, 0, -990), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-2100, 0, -990), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003);
	SetObstacle(D3DXVECTOR3(-2400, 0, -1100), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE008_YOKO);
	SetObstacle(D3DXVECTOR3(-2410, 0, -1750), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE007_YOKO);
	SetObstacle(D3DXVECTOR3(-2410, 0, -1460), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE000_YOKO);
	SetObstacle(D3DXVECTOR3(-1450, 0, -1760), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE006_YOKO);
	SetObstacle(D3DXVECTOR3(-1450, 0, -1510), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE003_YOKO);
	SetObstacle(D3DXVECTOR3(-1420, 0, -1250), D3DXVECTOR3(0, D3DX_PI*1.0f, 0), OBSTACLE_TYPE_HOUSE004_YOKO);
	SetObstacle(D3DXVECTOR3(-1510, 0, -2010), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE007);
	SetObstacle(D3DXVECTOR3(-1790, 0, -2010), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE006);
	SetObstacle(D3DXVECTOR3(-2090, 0, -2010), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE001);
	SetObstacle(D3DXVECTOR3(-2380, 0, -2010), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE004);
	SetObstacle(D3DXVECTOR3(-1790, 0, -1650), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE002);
	SetObstacle(D3DXVECTOR3(-2100, 0, -1650), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE002);
	SetObstacle(D3DXVECTOR3(-1790, 0, -1340), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE002);
	SetObstacle(D3DXVECTOR3(-2100, 0, -1340), D3DXVECTOR3(0, D3DX_PI*0.0f, 0), OBSTACLE_TYPE_HOUSE002);
#endif

	//尾崎担当エリア	（ギャグエリア右下）
#if 1

	SetObstacle(D3DXVECTOR3(6200, 0, -270), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SKYTREE);					//  
	SetObstacle(D3DXVECTOR3(6200, 0, 80), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_PIZZASYATOU);						// 
	SetObstacle(D3DXVECTOR3(6200, 0, 400), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SKYTREE);				// 
	SetObstacle(D3DXVECTOR3(6650, 0, -210), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_TEMPLE);						//  
	SetObstacle(D3DXVECTOR3(7100, 0, -240), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KAISYA);					// 
	SetObstacle(D3DXVECTOR3(6200, -300, 680), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KANBAN);					//  
	SetObstacle(D3DXVECTOR3(6750, 0, 680), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_SKYTREE);		//  
	SetObstacle(D3DXVECTOR3(7100, 0, 600), D3DXVECTOR3(0, D3DX_PI * 1.0, 0), OBSTACLE_TYPE_KAISYA);			//  
	SetObstacle(D3DXVECTOR3(7100, 0, 200), D3DXVECTOR3(0, D3DX_PI * 0.0, 0), OBSTACLE_TYPE_PIZZASYATOU);			//  

	SetObstacle(D3DXVECTOR3(7900, 0, 650), D3DXVECTOR3(0, D3DX_PI * 0.5, 0), OBSTACLE_TYPE_POKUTANK);			// ポクタンク

	SetObstacle(D3DXVECTOR3(3780, 0, -210), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_TEMPLE);					// 1 
	SetObstacle(D3DXVECTOR3(4250, 0, -260), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_PIZZASYATOU);					// 1 
	SetObstacle(D3DXVECTOR3(4550, 0, -260), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_HOUSE000);						// 1 

	SetObstacle(D3DXVECTOR3(7900, 0, -280), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_HOUSE006);					// 1 
	SetObstacle(D3DXVECTOR3(8200, 0, -280), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_HOUSE007);					// 1 
	SetObstacle(D3DXVECTOR3(8500, 0, -260), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_PIZZASYATOU);					// 1 
	SetObstacle(D3DXVECTOR3(8860, 0, -260), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_HOUSE000);						// 1 

	SetObstacle(D3DXVECTOR3(3650, 0, 650), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_POKUTANK);						// ポクタンク

	SetObstacle(D3DXVECTOR3(4500, 0, 650), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_PIZZASYATOU);					// 
	SetObstacle(D3DXVECTOR3(4900, 0, 650), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SKYTREE);						// 
	SetObstacle(D3DXVECTOR3(5300, -200, 680), D3DXVECTOR3(0, D3DX_PI * -0.5, 0), OBSTACLE_TYPE_KANBAN);							// 

	SetObstacle(D3DXVECTOR3(3620, 0, 1450), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SKYTREE);						// 	
	SetObstacle(D3DXVECTOR3(3620, 0, 1900), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KAMINARIMON_YOKO);				// 	
	SetObstacle(D3DXVECTOR3(3620, 0, 2400), D3DXVECTOR3(0, D3DX_PI * 1.0, 0), OBSTACLE_TYPE_POKKURUZOU);		// 

	SetObstacle(D3DXVECTOR3(5300, 0, 1450), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SKYTREE);						// 
	SetObstacle(D3DXVECTOR3(5360, 0, 2220), D3DXVECTOR3(0, D3DX_PI * 0.0, 0), OBSTACLE_TYPE_TEMPLE_YOKO);	// 
	SetObstacle(D3DXVECTOR3(5300, 0, 1700), D3DXVECTOR3(0, D3DX_PI * -0.5, 0), OBSTACLE_TYPE_POKKURUZOU);		// 

	SetObstacle(D3DXVECTOR3(5400, 0, -1130), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_PIZZASYATOU);					// 
	SetObstacle(D3DXVECTOR3(5300, 0, -670), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KAMINARIMON_YOKO);				// 
	SetObstacle(D3DXVECTOR3(5300, 0, -200), D3DXVECTOR3(0, D3DX_PI * 1.0, 0), OBSTACLE_TYPE_POKKURUZOU);		// 

	SetObstacle(D3DXVECTOR3(6200, 0, -1050), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SKYTREE);						// 
	SetObstacle(D3DXVECTOR3(6200, 0, -1550), D3DXVECTOR3(0, D3DX_PI * 1.0, 0), OBSTACLE_TYPE_TEMPLE_YOKO);	// 
	SetObstacle(D3DXVECTOR3(6200, 0, -2000), D3DXVECTOR3(0, D3DX_PI * -0.0, 0), OBSTACLE_TYPE_HOUSE004_YOKO);

	SetObstacle(D3DXVECTOR3(8100, 0, -1900), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_FLOUR);
	SetObstacle(D3DXVECTOR3(7800, 0, -1900), D3DXVECTOR3(0, D3DX_PI * -1.0, 0), OBSTACLE_TYPE_FLOUR);
	SetObstacle(D3DXVECTOR3(7900, 0, -2100), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_FLOUR_YOKO);
	SetObstacle(D3DXVECTOR3(7900, 0, -1800), D3DXVECTOR3(0, D3DX_PI * -1.0, 0), OBSTACLE_TYPE_FLOUR_YOKO);
	SetObstacle(D3DXVECTOR3(7940, 0, -1950), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_TENGA);

	SetObstacle(D3DXVECTOR3(6280, 0, -2800), D3DXVECTOR3(0, D3DX_PI * -0.5, 0), OBSTACLE_TYPE_POKUTANK);

	SetObstacle(D3DXVECTOR3(8720, 0, 2320), D3DXVECTOR3(0, D3DX_PI * 0.0, 0), OBSTACLE_TYPE_OFFICE001_YOKO);

	SetObstacle(D3DXVECTOR3(5300, 0, -1800), D3DXVECTOR3(0, D3DX_PI * 1.0, 0), OBSTACLE_TYPE_HOUSE003);			// 
	SetObstacle(D3DXVECTOR3(5300, 0, -2150), D3DXVECTOR3(0, D3DX_PI * 0.0, 0), OBSTACLE_TYPE_HOUSE005_YOKO);		// 
	SetObstacle(D3DXVECTOR3(5300, -200, -2600), D3DXVECTOR3(0, D3DX_PI * 0.5, 0), OBSTACLE_TYPE_KANBAN);	// 

	SetObstacle(D3DXVECTOR3(6980, 0, -1900), D3DXVECTOR3(0, D3DX_PI * 1.0, 0), OBSTACLE_TYPE_KOUZISYA);			// 
	SetObstacle(D3DXVECTOR3(7160, 0, -1900), D3DXVECTOR3(0, D3DX_PI * 1.0, 0), OBSTACLE_TYPE_KOUZISYA);			// 
	SetObstacle(D3DXVECTOR3(6980, 0, -2700), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KOUZISYA);			// 
	SetObstacle(D3DXVECTOR3(7160, 0, -2700), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KOUZISYA);			// 
	SetObstacle(D3DXVECTOR3(7070, 0, -2330), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_TUTI);			// 
	SetObstacle(D3DXVECTOR3(6840, 0, -2480), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KOUZIHYOUSIKI_YOKO);			// 
	SetObstacle(D3DXVECTOR3(6840, 0, -2150), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KOUZIHYOUSIKI_YOKO);			// 
	SetObstacle(D3DXVECTOR3(7280, 0, -2480), D3DXVECTOR3(0, D3DX_PI * 1.0, 0), OBSTACLE_TYPE_KOUZIHYOUSIKI_YOKO);			// 
	SetObstacle(D3DXVECTOR3(7280, 0, -2150), D3DXVECTOR3(0, D3DX_PI * 1.0, 0), OBSTACLE_TYPE_KOUZIHYOUSIKI_YOKO);			//

	SetObstacle(D3DXVECTOR3(4450, 0, 1490), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_POPUTANK);						// ポプタンク 

	SetObstacle(D3DXVECTOR3(6200, 0, 2360), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_POPUTANK);						// ポプタンク 

	SetObstacle(D3DXVECTOR3(7080, 0, 2350), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_PIZZASYATOU);					// 
	SetObstacle(D3DXVECTOR3(7370, 0, 2350), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_HOUSE004);					//  
	SetObstacle(D3DXVECTOR3(7640, 0, 2350), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_HOUSE003);					//  

	SetObstacle(D3DXVECTOR3(7900, 0, 2350), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_POKKURUZOU);					//  

	SetObstacle(D3DXVECTOR3(8800, 0, -1100), D3DXVECTOR3(0, D3DX_PI * 0.5, 0), OBSTACLE_TYPE_KAISYA);			//  
	SetObstacle(D3DXVECTOR3(8800, -200, -1500), D3DXVECTOR3(0, D3DX_PI * 0.5, 0), OBSTACLE_TYPE_KANBAN);			//  
	SetObstacle(D3DXVECTOR3(8800, 0, -1900), D3DXVECTOR3(0, D3DX_PI * 0.5, 0), OBSTACLE_TYPE_KAISYA);			//  

	SetObstacle(D3DXVECTOR3(7800, 0, -1080), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_TEMPLE);						//  
	SetObstacle(D3DXVECTOR3(7100, 0, -1080), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_HOUSE003);						//  

	SetObstacle(D3DXVECTOR3(8600, 0, -2800), D3DXVECTOR3(0, D3DX_PI * 1.0, 0), OBSTACLE_TYPE_HAKASEHOUSE);		//  


	SetObstacle(D3DXVECTOR3(8010, 0, -2780), D3DXVECTOR3(0, D3DX_PI * 0.5, 0), OBSTACLE_TYPE_POPUTANK);		//  

	SetObstacle(D3DXVECTOR3(7080, 0, 1550), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_USHI);							// 
	SetObstacle(D3DXVECTOR3(6710, 0, 1550), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_TAMAGO);						// 
	SetObstacle(D3DXVECTOR3(6310, 0, 1550), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BASTAR);						// 

	SetObstacle(D3DXVECTOR3(7880, 0, 1550), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_HOUSE001);						// 
	SetObstacle(D3DXVECTOR3(8170, 0, 1550), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_HOUSE007);						// 
	SetObstacle(D3DXVECTOR3(8480, 0, 1550), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KAISYA);						// 
	SetObstacle(D3DXVECTOR3(8850, -200, 1480), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KANBAN);						// 

	SetObstacle(D3DXVECTOR3(8830, 0, 630), D3DXVECTOR3(0, D3DX_PI * 0.0, 0), OBSTACLE_TYPE_USHI);				// 
																												//前
	SetObstacle(D3DXVECTOR3(7200, 0, 1300), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(7060, 0, 1300), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(6920, 0, 1300), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(6780, 0, 1300), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(6640, 0, 1300), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(6500, 0, 1300), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(6360, 0, 1300), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(6220, 0, 1300), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(6080, 0, 1300), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
																										//後																								
	SetObstacle(D3DXVECTOR3(7200, 0, 1720), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(7060, 0, 1720), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(6920, 0, 1720), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(6780, 0, 1720), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(6640, 0, 1720), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(6500, 0, 1720), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(6360, 0, 1720), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(6220, 0, 1720), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					// 
	SetObstacle(D3DXVECTOR3(6080, 0, 1720), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU);					//
																										//左
	SetObstacle(D3DXVECTOR3(6013, 0, 1650), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU_YOKO);					//
	SetObstacle(D3DXVECTOR3(6013, 0, 1510), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU_YOKO);					//
	SetObstacle(D3DXVECTOR3(6013, 0, 1370), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU_YOKO);					//
																											//右
	SetObstacle(D3DXVECTOR3(7267, 0, 1650), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU_YOKO);					//
	SetObstacle(D3DXVECTOR3(7267, 0, 1510), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU_YOKO);					//
	SetObstacle(D3DXVECTOR3(7267, 0, 1370), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_SAKU_YOKO);					//

	SetObstacle(D3DXVECTOR3(4400, 0, 2500), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KOUZISYA);						//
	SetObstacle(D3DXVECTOR3(4600, 0, 2500), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KOUZISYA);						//  
	SetObstacle(D3DXVECTOR3(4400, 0, 2200), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KOUZIHYOUSIKI);					//
	SetObstacle(D3DXVECTOR3(4600, 0, 2200), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KOUZIHYOUSIKI);					//w
	SetObstacle(D3DXVECTOR3(4300, 0, 2300), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KOUZIHYOUSIKI_YOKO);			//  
	SetObstacle(D3DXVECTOR3(4300, 0, 2700), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_KOUZIHYOUSIKI_YOKO);			//  
	SetObstacle(D3DXVECTOR3(4700, 0, 2300), D3DXVECTOR3(0, D3DX_PI * -1.0f, 0), OBSTACLE_TYPE_KOUZIHYOUSIKI_YOKO);			//  
	SetObstacle(D3DXVECTOR3(4700, 0, 2700), D3DXVECTOR3(0, D3DX_PI * -1.0f, 0), OBSTACLE_TYPE_KOUZIHYOUSIKI_YOKO);			//  
	SetObstacle(D3DXVECTOR3(4400, 0, 2800), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_KOUZIIN);					//
	SetObstacle(D3DXVECTOR3(4600, 0, 2800), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_KOUZIIN);					//

	SetObstacle(D3DXVECTOR3(3500, 0, -930), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(3600, 0, -930), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(3700, 0, -930), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(3800, 0, -930), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(3900, 0, -930), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(4000, 0, -930), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(4100, 0, -930), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(4200, 0, -930), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(4300, 0, -930), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(4400, 0, -930), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(4500, 0, -930), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(4600, 0, -930), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST);					//

	SetObstacle(D3DXVECTOR3(3500, 0, -2070), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(3600, 0, -2070), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(3700, 0, -2070), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(3800, 0, -2070), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(3900, 0, -2070), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(4000, 0, -2070), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(4100, 0, -2070), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(4200, 0, -2070), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(4300, 0, -2070), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(4400, 0, -2070), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(4500, 0, -2070), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST);					//
	SetObstacle(D3DXVECTOR3(4600, 0, -2070), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST);					//

	SetObstacle(D3DXVECTOR3(3480, 0, -1030), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST_YOKO);					//
	SetObstacle(D3DXVECTOR3(3480, 0, -1130), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST_YOKO);					//
	SetObstacle(D3DXVECTOR3(3480, 0, -1230), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST_YOKO);					//
	SetObstacle(D3DXVECTOR3(3480, 0, -1330), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST_YOKO);					//
	SetObstacle(D3DXVECTOR3(3480, 0, -1430), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST_YOKO);					//
	SetObstacle(D3DXVECTOR3(3480, 0, -1530), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST_YOKO);					//
	SetObstacle(D3DXVECTOR3(3480, 0, -1630), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST_YOKO);					//
	SetObstacle(D3DXVECTOR3(3480, 0, -1730), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST_YOKO);					//
	SetObstacle(D3DXVECTOR3(3480, 0, -1830), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST_YOKO);					//
	SetObstacle(D3DXVECTOR3(3480, 0, -1930), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST_YOKO);					//
	SetObstacle(D3DXVECTOR3(3480, 0, -2030), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_BRIST_YOKO);					//

	SetObstacle(D3DXVECTOR3(4620, 0, -1030), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST_YOKO);					//
	SetObstacle(D3DXVECTOR3(4620, 0, -1130), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST_YOKO);					//
	SetObstacle(D3DXVECTOR3(4620, 0, -1230), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST_YOKO);					//
	SetObstacle(D3DXVECTOR3(4620, 0, -1330), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST_YOKO);					//
	SetObstacle(D3DXVECTOR3(4620, 0, -1430), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST_YOKO);
	SetObstacle(D3DXVECTOR3(4620, 0, -1530), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST_YOKO);
	SetObstacle(D3DXVECTOR3(4620, 0, -1630), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST_YOKO);
	SetObstacle(D3DXVECTOR3(4620, 0, -1730), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST_YOKO);
	SetObstacle(D3DXVECTOR3(4620, 0, -1830), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST_YOKO);
	SetObstacle(D3DXVECTOR3(4620, 0, -1930), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST_YOKO);
	SetObstacle(D3DXVECTOR3(4620, 0, -2030), D3DXVECTOR3(0, D3DX_PI * 1.0f, 0), OBSTACLE_TYPE_BRIST_YOKO);

	SetObstacle(D3DXVECTOR3(3650, 0, -2800), D3DXVECTOR3(0, D3DX_PI * 1.0, 0), OBSTACLE_TYPE_HOUSE005);
	SetObstacle(D3DXVECTOR3(4280, 0, -2800), D3DXVECTOR3(0, D3DX_PI * 1.0, 0), OBSTACLE_TYPE_OFFICE002);

	SetObstacle(D3DXVECTOR3(4000, 0, -1530), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_HAKASEHOUSE_YOKO);

	SetObstacle(D3DXVECTOR3(3650, 0, -1500), D3DXVECTOR3(0, 0, 0), OBSTACLE_TYPE_HAKASE_YOKO);

#endif
}
//=============================================================================
// 終了処理
//=============================================================================
void UninitTitle(void)
{	//テクスチャの破棄
	if (g_pTextureTitle != NULL)
	{
		g_pTextureTitle->Release();
		g_pTextureTitle = NULL;
	}
	//頂点バッファの破棄の破棄
	if (g_pVtxBuffTitle != NULL)
	{
		g_pVtxBuffTitle->Release();
		g_pVtxBuffTitle = NULL;
	}
	// カメラの終了処理
	UninitCamera();
	// ライトの終了処理
	UninitLight();
	// プレスエンター終了処理
	UninitPressEnter();
	// タイトルロゴ終了処理
	UninitTitleLogo();
	// ポリゴン
	UninitPolygon();
	// 影の
	UninitShadow();
	// 通行人
	UninitPassage();
	// 車
	UninitCar();
	//　テクスチャモデル
	UninitObstacle();
}
//=============================================================================
// 更新処理
//=============================================================================
void UpdateTitle(void)
{
	D3DXVECTOR3 TitleLogo;
	FADE fade;
	JoyState pJoyState = GetJoystate();
	XINPUT_STATE state;
	XInputGetState(0, &state);
	fade = GetFade();
	g_nCntRankingTimer++;
		//エンターキー
	if (GetKeyboardTrigger(DIK_RETURN) == true && fade == FADE_NONE || (state.Gamepad.wButtons & XINPUT_GAMEPAD_B  && pJoyState.bConnectionJoypad == true) && fade == FADE_NONE
		|| (state.Gamepad.wButtons & XINPUT_GAMEPAD_A  && pJoyState.bConnectionJoypad == true) && fade == FADE_NONE || (state.Gamepad.wButtons & XINPUT_GAMEPAD_Y  && pJoyState.bConnectionJoypad == true)
		|| (state.Gamepad.wButtons & XINPUT_GAMEPAD_X  && pJoyState.bConnectionJoypad == true))
	{
		TitleLogo = *GetTitleLogo();
		SetTitleLogo(D3DXVECTOR3(640.0f, 220.0f, 0.0f));
		
		if (TitleLogo == D3DXVECTOR3(640.0f, 220.0f, 0.0f))
		{
			PlaySound(SOUND_LABEL_SE_BIKU);
			SetFade(MODE_TUTORIAL);
			StopSound(SOUND_LABEL_BGM_TITLE);			
		}
		g_JoyStateTitle.nJoypadState = INPUT_JOYSTATE_PUSH;
	}
	if (g_nCntRankingTimer >= 1200)
	{
		TIME *pTime = GetTime();
		pTime->nTime = 0;
		SetFade(MODE_RANKING);
		g_nCntRankingTimer = 0;
	}

	// カメラの更新処理
	UpdateCamera();
	// ライトの更新処理
	UpdateLight();
	// プレスエンター更新処理
	UpdatePressEnter();
	// タイトルロゴ更新処理
	UpdateTitleLogo();
	// ポリゴン
	UpdatePolygon();
	// 影の
	UpdateShadow();
	// 通行人
	UpdatePassage();
	// 車
	UpdateCar();
	//　テクスチャモデル
	UpdateObstacle();

	//ジョイパッドの状態更新
	if (g_JoyStateTitle.nJoypadState == INPUT_JOYSTATE_PUSH)
	{
		g_JoyStateTitle.nJoypadState = INPUT_JOYSTATE_NONE;
	}
	else if (g_JoyStateTitle.nJoypadState == INPUT_JOYSTATE_NONE)
	{
		g_JoyStateTitle.nJoypadState = INPUT_JOYSTATE_NOTPUSH;
	}
}
//=============================================================================
// 描画処理
//=============================================================================
void DrawTitle(void)
{
	// カメラの設定
	//SetCamera(0);

	//LPDIRECT3DDEVICE9 pDevice;

	////デバイスを取得する
	//pDevice = GetDevice();
	////頂点バッファをデータストリームに設定
	//pDevice->SetStreamSource(0, g_pVtxBuffTitle, 0, sizeof(VERTEX_2D));
	////頂点フォーマットを設定
	//pDevice->SetFVF(FVF_VERTEX_2D);
	////テクスチャの設定
	//pDevice->SetTexture(0, g_pTextureTitle);
	////ポリゴンの描画
	//pDevice->DrawPrimitive(D3DPT_TRIANGLESTRIP,
	//	0,	//開始する頂点のインデックス
	//	2); //描画するプリミティブ数

	DrawPressEnter();
	DrawTitleLogo();
	// ポリゴン
	DrawPolygon();
	// 影の
	DrawShadow();
	// 通行人
	DrawPassage();
	// 車
	DrawCar();
	// テクスチャモデル
	DrawObstacle();
}
