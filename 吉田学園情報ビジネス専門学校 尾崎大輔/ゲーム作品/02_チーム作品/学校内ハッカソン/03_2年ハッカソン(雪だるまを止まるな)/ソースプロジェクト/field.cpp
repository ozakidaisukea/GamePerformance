//=============================================================================
//
// フィールドの処理 [field.cpp]
// Author : Jukiya Hayakawa
//
//=============================================================================
#include "field.h"
#include "scene3D.h"
#include "manager.h"
#include "renderer.h"
#include "input.h"
#include "debugproc.h"
#include "player.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define TEXTURE_NAME01 "data\\TEXTURE\\grass.jpg"			//テクスチャ名
//=============================================================================
// 静的メンバ変数宣言
//=============================================================================
LPDIRECT3DTEXTURE9 CField::m_pTexture = NULL;

//=============================================================================
// オブジェクトのテクスチャ読み込み
//=============================================================================
HRESULT CField::Load(void)
{
	//レンダリングの取得
	CRenderer *pRenderer;
	pRenderer = CManager::GetRenderer();

	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice;
	pDevice = pRenderer->GetDevice();

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(pDevice,
		NULL/*"data\\TEXTURE\\earth000.jpg"*/,
		&m_pTexture);

	return S_OK;
}

//=============================================================================
// オブジェクトのテクスチャ破棄
//=============================================================================
void CField::Unload(void)
{
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}

//=============================================================================
// フィールドのコンストラクタ
//=============================================================================
CField::CField() : CScene3D(6, OBJTYPE_SCENE3D)
{

}
//=============================================================================
// フィールドのデストラクタ
//=============================================================================
CField::~CField()
{

}
//=============================================================================
// フィールドの生成
//=============================================================================
CField *CField::Create(D3DXVECTOR3 pos,float sizeX,float sizeZ)
{
	CField *pField = NULL;		//オブジェクトのポインタ

	if (pField == NULL)
	{
		pField = new CField;	//動的確保
		if (pField != NULL)
		{
			pField->SetPos(pos);
			pField->SetSizeX(sizeX);
			pField->SetSizeZ(sizeZ);
			pField->BindTexture(m_pTexture);
			pField->Init();		//初期化処理
		}
	}
	return pField;
}
//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CField::Init(void)
{
	//レンダリングの取得
	CRenderer *pRenderer;
	pRenderer = CManager::GetRenderer();

	//デバイスの取得
	LPDIRECT3DDEVICE9 pDevice;
	pDevice = pRenderer->GetDevice();


	//初期化処理
	CScene3D::Init();

	//種類の設定
	SetObjType(OBJTYPE_SCENE3D);

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CField::Uninit(void)
{
	//オブジェクト3Dの終了処理
	CScene3D::Uninit();

	//オブジェクトの破棄
	Release();
}

//=============================================================================
// 更新処理
//=============================================================================
void CField::Update(void)
{
	D3DXVECTOR3 pos = GetPos();
	float sizeX = GetSizeX();
	float sizeZ = GetSizeZ();
}

//=============================================================================
// 描画処理
//=============================================================================
void CField::Draw(void)
{
	//オブジェクト3Dの描画処理
	CScene3D::Draw();
}